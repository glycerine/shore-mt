# --------------------------------------------------------------- #
# -- Copyright (c) 1994, 1995 Computer Sciences Department,    -- #
# -- University of Wisconsin-Madison, subject to the terms     -- #
# -- and conditions given in the file COPYRIGHT.  All Rights   -- #
# -- Reserved.                                                 -- #
# --------------------------------------------------------------- #

#
#  This script tests 6x6 lock compatibility table on volume,
#  file, and record.
#

catch {unset rid}
catch {unset fid}


set lock_mode 		{IS IX SH SIX UD EX}
set rid			"k(s(10.0).100.200)"
set fid			"s(10.0)"
set vid			"10"

proc get_lock {id mode compat} {
    sm begin_xct
    set e [catch { sm lock $id $mode INSTANT 0}]
    sm commit_xct

    #
    # If compat is 1, then e should be 0; it means locks are compatible.
    # If compat is 0, then e should be 1; it means locks are incompatible.
    #
    assert {expr $compat != $e}
}

############################################################
#   for each mode in lock_mode, 
#	acquire the lock in mode,
#	for each cmode in lock_mode,
#	    fork a child to get the lock in cmode in INSTANT duration,
#	    check to see if it can acquire the lock according to compat table
#
proc lock_test { id } {
    global lock_mode
    global compat
    global verbose_flag

    foreach mode $lock_mode {
	sm begin_xct
	sm lock $id $mode LONG
	if {$verbose_flag}  {sm dump_locks}

	foreach cmode $lock_mode {
	    verbose ====  $mode  and  $cmode  ====

	    set job [fork_thread get_lock $id $cmode $compat($mode,$cmode)]
	    join_thread $job
	}
	sm commit_xct
	if {$verbose_flag}  {sm dump_locks}
	# verbose press RETURN to continue
	# gets stdin
    }
}

verbose "TEST:\t6x6 Lock Compatibility on Record, File, and Volume"

verbose "\n*******  Volume Locking  *******\n"
lock_test $vid

verbose "\n*******  File Locking  *******\n"
lock_test $fid

verbose "\n*******  Record Locking  *******\n"
lock_test $rid

verbose "STATUS:\tOK"

unset lock_mode rid vid fid
