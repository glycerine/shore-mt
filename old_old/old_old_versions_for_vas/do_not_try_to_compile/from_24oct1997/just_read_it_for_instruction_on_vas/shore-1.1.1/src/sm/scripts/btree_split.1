# --------------------------------------------------------------- #
# -- Copyright (c) 1994, 1995 Computer Sciences Department,    -- #
# -- University of Wisconsin-Madison, subject to the terms     -- #
# -- and conditions given in the file COPYRIGHT.  All Rights   -- #
# -- Reserved.                                                 -- #
# --------------------------------------------------------------- #

#
# start up
#

source $script_dir/vol.init

if {$volid == 0} {
    set volid 10
    sm create_vol $volid force
    set volid [sm init_vol_logical_id $volid 100]
    sm mount
}

# set nrec 5000
set nrec 800

proc probe {ndx first last} {
    verbose "probing:" $ndx " from " $first "to " $last
    for {set i $first} {$i <= $last} {incr i} {
	set el [sm find_assoc $ndx [format %03d $i] ]
        if {$el != [format %075d $i]} {
		verbose assert {failure about to occur == $i}
		assert {[expr {[format %075d $i] == $el}]}
	}
	#assert {[expr {[format %075d $i] == $el}]}
    }
}

#
# create index and load it up 
#
sm begin_xct
set ndx [sm create_index $volid btree]
verbose created index $ndx

for {set i 1} {$i <= $nrec} {incr i} {
    #verbose inserting $i [format %03d $i] [format %075d $i]
    if {$i%50 == 0} { verbose inserting $i [format %03d $i] [format %075d $i] }
    sm create_assoc $ndx [format %03d $i] [format %075d $i]
    #set el [sm find_assoc $ndx [format %03d $i] ]
    #assert {[expr {[format %075d $i] == $el}]}

    set odd_rm_start 100
    if {$i == $odd_rm_start && $i%1 == 0 } {
	verbose removing odd entries from 7 to $i
	for {set j 7} {$j <= $i} {incr j; incr j} {
	    sm destroy_assoc $ndx [format %03d $j] [format %075d $j]
	}
    }

    if {$i > 1000 && $i%1 == 0 } {
	probe $ndx [expr {$i - 10}]  $i
    }
    if {$i > 900 && $i%100 == 0 } {
	probe $ndx $odd_rm_start $i
    }
}

verbose "probe: whole index"
for {set i 1} {$i <= $nrec} {incr i} {
    verbose "probe: " $i
    set el "not found"
    catch {set el [sm find_assoc $ndx [format %03d $i] ]}
    if {$el != [format %075d $i]} {
	    verbose $i -> $el
    }
    # assert {[expr {[format %075d $i] == $el}]}
}
verbose probed [expr {$i - 1}]
verbose "---- successful"

verbose [sm gather_stats]

sm commit_xct

verbose [sm gather_stats]
unset nrec ndx odd_rm_start i el j
