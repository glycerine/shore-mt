# --------------------------------------------------------------- #
# -- Copyright (c) 1994, 1995 Computer Sciences Department,    -- #
# -- University of Wisconsin-Madison, subject to the terms     -- #
# -- and conditions given in the file COPYRIGHT.  All Rights   -- #
# -- Reserved.                                                 -- #
# --------------------------------------------------------------- #

#
#	Test Temp files
#  Really, just a test to make sure that temp files are destroyed
#  after a restart.
#

source $script_dir/vol.init

if {$Use_logical_id == 1} {
    echo tmpfile.1 cannot be run (since logical IDs are turned on)
    echo until we fix PR 331
} else {
if {$logging == 1} {

proc verify {} {
    global ntfid nfid tfid fid Use_logical_id

    sm begin_xct
    for {set i 0} {$i < $ntfid} {incr i} {
	verbose verifying $tfid($i)
	if [catch {sm scan_rids $tfid($i)} catcherr] {
	    verbose (EXPECTED) scan_rids error: $catcherr
	    if {$Use_logical_id} {
		assert {error_is $catcherr E_BADLOGICALID}
	    } else {
		assert {error_is $catcherr E_BADSTID}
	    }
	} else {
	    verbose EXPECTED ERROR, but didn't get one!
	    verbose got: $catcherr
	}
    }

    for {set i 0} {$i < $nfid} {incr i} {
	# no error
	verbose verifying $fid($i)
	set scan [sm scan_file_create $fid($i) t_cc_record]
	sm scan_file_destroy $scan
    }
    sm commit_xct
}

set num_rec 20
set id_width %06d

if [is_set rid] {
   unset rid
}

verbose [sm get_volume_quota $volid]


sm begin_xct
set nfid 0
set ntfid 0

verbose tid [sm xct_to_tid [sm xct]]
set tfid($ntfid) [sm create_file $volid tmp]
incr ntfid

set fid($nfid) [sm create_file $volid]
incr nfid

set tfid($ntfid) [sm create_file $volid tmp]
incr ntfid

set trid(0) $null_rid
for {set i 1} {$i <= $num_rec} {incr i} {
    set trid($i) [
	sm create_rec $tfid(0) [format $id_width $i] 10 data.[format %01000d $i]
    ]
}

set tfid($ntfid) [sm create_file $volid tmp]
incr ntfid

set fid($nfid) [sm create_file $volid]
incr nfid

set tfid($ntfid) [sm create_file $volid tmp]
incr ntfid
for {set i 1} {$i <= $num_rec} {incr i} {
    set trid($i) [
	sm create_rec $tfid(0) [format $id_width $i] 10 data.[format %01000d $i]
    ]
}
set tfid($ntfid) [sm create_file $volid tmp]
incr ntfid

set fid($nfid) [sm create_file $volid]
incr nfid

set tfid($ntfid) [sm create_file $volid tmp]
incr ntfid
for {set i 1} {$i <= $num_rec} {incr i} {
    set trid($i) [
	sm create_rec $tfid(0) [format $id_width $i] 10 data.[format %01000d $i]
    ]
}

verbose [sm get_volume_quota $volid]
sm commit_xct

verbose [sm get_volume_quota $volid]

restart
# VERIFY tmpfiles are gone; others are there
verify

set ntfid 0

verbose [sm get_volume_quota $volid]

sm begin_xct

verbose tid [sm xct_to_tid [sm xct]]
set tfid($ntfid) [sm create_file $volid tmp]
incr ntfid

verbose after temp 1 [sm get_volume_quota $volid]
set tfid($ntfid) [sm create_file $volid tmp]
incr ntfid

verbose after temp 2 [sm get_volume_quota $volid]

sm commit_xct

restart
# VERIFY tmpfiles are gone; others are there
verify
set ntfid 0
verbose after restart [sm get_volume_quota $volid]

sm begin_xct
verbose tid [sm xct_to_tid [sm xct]]

set tfid($ntfid) [sm create_file $volid tmp]
incr ntfid

verbose after temp 1 [sm get_volume_quota $volid]

set tfid($ntfid) [sm create_file $volid tmp]
incr ntfid

verbose after temp 2 [sm get_volume_quota $volid]
sm commit_xct
restart
# VERIFY tmpfiles are gone; others are there
verify
verbose after restart [sm get_volume_quota $volid]

unset tfid fid ntfid nfid i num_rec trid id_width
} else {
    echo tmpfile.1 cannot be run (since logging is turned off)
}
}
