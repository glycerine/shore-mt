# <std-header style='data' orig-src='shore'>
#
#  $Id: sthread_stats.dat,v 1.22 2010/11/08 15:07:28 nhall Exp $
#
# SHORE -- Scalable Heterogeneous Object REpository
#
# Copyright (c) 1994-99 Computer Sciences Department, University of
#                       Wisconsin -- Madison
# All Rights Reserved.
#
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright
# notice and this permission notice appear in all copies of the
# software, derivative works or modified versions, and any portions
# thereof, and that both notices appear in supporting documentation.
#
# THE AUTHORS AND THE COMPUTER SCIENCES DEPARTMENT OF THE UNIVERSITY
# OF WISCONSIN - MADISON ALLOW FREE USE OF THIS SOFTWARE IN ITS
# "AS IS" CONDITION, AND THEY DISCLAIM ANY LIABILITY OF ANY KIND
# FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
#
# This software was developed with support by the Advanced Research
# Project Agency, ARPA order number 018 (formerly 8230), monitored by
# the U.S. Army Research Laboratory under contract DAAB07-91-C-Q518.
# Further funding for this work was provided by DARPA through
# Rome Research Laboratory Contract No. F30602-97-2-0247.
#
#   -- do not edit anything above this line --   </std-header>


sthread Threads = 0x00050000 sthread_stats {
	u_long	rwlock_r_wait		Number waits for read lock on srwlock
	u_long	rwlock_w_wait		Number waits for write lock on srwlock
	u_long	needs_latch_condl	Conditional latch requests
	u_long	needs_latch_uncondl	Unconditional latch requests
	u_long	latch_condl_nowait	Conditional requests satisfied immediately
	// NOTE: latch_uncondl_nowait is not counted unless you
	// #define EXPENSIVE_LATCH_COUNTS in latch.cpp
	// There's a bit of a heisen-watch syndrome here, nevertheless, this
	// could be useful
	u_long	latch_uncondl_nowait	Unconditional requests satisfied immediately
};

