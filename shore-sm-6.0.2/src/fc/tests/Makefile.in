# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# if tcl.h is not in your /usr/include, put its path here.
# I haven't found a way to locate it with autoconf yet.
#
# deathstar:
# Built-from-sources, with symbols:
# note: not on chianti:
# TCL_INCLUDE = /scratch/s/tcl/include
# TCL_LIB = -L/scratch/s/tcl/lib -ltcl8.5
srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.generic $(top_srcdir)/Makefile.local
@COMPILER_IS_SUNCC_TRUE@am__append_1 = -features=extensions,zla \
@COMPILER_IS_SUNCC_TRUE@	-xdebugformat=stabs -DSOLARIS2 \
@COMPILER_IS_SUNCC_TRUE@	-library=stlport4 -mt -lpthread
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_ICC_TRUE@@COMPILER_IS_SUNCC_FALSE@am__append_2 = -Wall -Werror-all -pthread -Wno-unknown-pragmas -Wcheck  \
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_ICC_TRUE@@COMPILER_IS_SUNCC_FALSE@				-wd981 -wd444  -wd383 \
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_ICC_TRUE@@COMPILER_IS_SUNCC_FALSE@				-wd1599 -wd1418 -wd1419 -wd1572 -wd181 -wd2259 -wd128 

# 981 : operands are evaluated in unspecified order -- so what? OK
# 444 : destructor for base class is not virtual: we have a lot of these
# for base classes that have only static or const/enum members: smlevel*,
# X_base_t, etc.  OK.
# 383 : value copied to a temp, ref to temp used. OK 
# 1599: declaration hides variable X (declared at line Z) ... OK
# These are unavoidable due to the use of the W_DO and similar idioms.
# 193 : zero used for undefined preprocessing variable  - fix
# 1418: external function def with no prior decl
#  and
# 1419: external declaration in primary source file
# used to generate un-mangled names for calling in debugger. OK.
# 1572: floating point equality and inequality comparisons are unreliable 
# in rtree and btree code; OK.
# 181 : argument is incompat with corresponding format : in
# debugger-callable routines  : fix
# 2259: non-pointer converssion from X to Y may lose sig bits : TODO: track
# these down
# 128 : not reachable (CC complains about not returning values, icc complains
# about not reachable)
# -pedantic requires -Wno-long-long
# 
# Let's avoid use of long long if possible, and require
# explicit C++ types based on data model of compiler.  There
# might be some cases where the underlying library function
# or system include file uses long long, in which case we will have to.
#
#
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_ICC_FALSE@@COMPILER_IS_SUNCC_FALSE@am__append_3 = -Wextra -Wall -Wno-long-long -Werror -pthread
@COMPILER_IS_GCC_FALSE@@COMPILER_IS_SUNCC_FALSE@am__append_4 = UNKNOWN COMPILER
@COMPILER_IS_GCC_TRUE@am__append_5 = -D__GNUC_AS__ -D_ASM
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_TRUE@am__append_6 = $(TARGET_FLAGS)
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_TRUE@am__append_7 = $(TARGET_FLAGS) 
@ENABLE_ARCH_LP64_FALSE@am__append_8 = $(TARGET_FLAGS) -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 
@USE_IOS_COMPAT_TRUE@am__append_9 = -I$(top_srcdir)/src/compat

# --------------------------------------------------------
#
# Determine which gcc warnings to use, based on which 
# compiler version we are using.
#
# -Wno-deprecated # TODO:remove
#
# Note: gcc seems to issue a false positive warning about strict aliasing
# in the new override code, so we have to add -fno-strict-aliasing.
# --------------------------------------------------------
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_ICC_TRUE@am__append_10 = -Wall -fno-strict-aliasing  -Wpointer-arith -Wwrite-strings
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_ICC_FALSE@am__append_11 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings

# /* In adition to the 3.2 warnings, prototype errors for c/objc only */
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_TRUE@am__append_12 = 
# /* GCC 3.2 doesn't like -Wmissing-declarations and -Wnested-externs */
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_TRUE@am__append_13 = -Wstrict-prototypes -Wmissing-prototypes 
# /* Need this to stop warnings of normal (old) standard c++ facilities use. */
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_FALSE@am__append_14 = -Wstrict-prototypes \
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_FALSE@	-Wmissing-prototypes \
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_FALSE@	-Wmissing-declarations \
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_FALSE@	-Wnested-externs
@COMPILER_IS_GCC_TRUE@am__append_15 = -Woverloaded-virtual 
@DEBUGGERSYMBOLS_TRUE@am__append_16 = $(SYMBOLSFLAGS)
@DEBUGGERSYMBOLS_FALSE@am__append_17 = $(NOSYMBOLSFLAGS)
# PURIFY_COLLECTOR = -collector=/usr/bin/ld
@PURIFY_TRUE@am__append_18 = $(PURIFY_LIBS)
@PURIFY_TRUE@am__append_19 = $(check_PROGRAMS:%=%.pure)
@PURIFY_TRUE@am__append_20 = -DPURIFY -DPURIFY_ZERO -I$(PURIFY_INCLUDE) 
# QUANTIFY_COLLECTOR = -collector=/usr/bin/ld
@QUANTIFY_TRUE@am__append_21 = $(QUANTIFY_LIBS)
@QUANTIFY_TRUE@am__append_22 = $(check_PROGRAMS:%=%.quant)
@QUANTIFY_TRUE@am__append_23 = -DQUANTIFY -I$(QUANTIFY_INCLUDE) 
# PURECOV_COLLECTOR = -collector=/usr/bin/ld
@PURECOV_TRUE@am__append_24 = $(PURECOV_LIBS)
@PURECOV_TRUE@am__append_25 = $(check_PROGRAMS:%=%.purecov)
@PURECOV_TRUE@am__append_26 = -DPURECOV -I$(PURECOV_INCLUDE) 
check_PROGRAMS = list1$(EXEEXT) list2$(EXEEXT) list3$(EXEEXT) \
	hash1$(EXEEXT) hash2$(EXEEXT) ntime$(EXEEXT) \
	rusage_test$(EXEEXT) darray$(EXEEXT) memblock$(EXEEXT) \
	blockpools$(EXEEXT) heap$(EXEEXT) rc$(EXEEXT) random$(EXEEXT) \
	stats$(EXEEXT) stats2$(EXEEXT) box$(EXEEXT) io$(EXEEXT) \
	ss$(EXEEXT) rand$(EXEEXT) container$(EXEEXT) cuckoo$(EXEEXT) \
	findprime$(EXEEXT) findsizes$(EXEEXT) bitvector$(EXEEXT) \
	basic_sizes$(EXEEXT)
subdir = src/fc/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config/shore-config.h
CONFIG_CLEAN_FILES =
am_basic_sizes_OBJECTS = basic_sizes.$(OBJEXT)
basic_sizes_OBJECTS = $(am_basic_sizes_OBJECTS)
basic_sizes_LDADD = $(LDADD)
@PURIFY_TRUE@am__DEPENDENCIES_1 =  \
@PURIFY_TRUE@	$(PURIFY_INCLUDE)/lib64/libpurify_stubs.a
@PURIFY_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
@QUANTIFY_TRUE@am__DEPENDENCIES_3 =  \
@QUANTIFY_TRUE@	$(QUANTIFY_INCLUDE)/lib64/libquantify_stubs.a
@QUANTIFY_TRUE@am__DEPENDENCIES_4 = $(am__DEPENDENCIES_3)
@PURECOV_TRUE@am__DEPENDENCIES_5 =  \
@PURECOV_TRUE@	$(PURECOV_INCLUDE)/libpurecov_stubs.a
@PURECOV_TRUE@am__DEPENDENCIES_6 = $(am__DEPENDENCIES_5)
am__DEPENDENCIES_7 = $(top_srcdir)/src/atomic_ops/libatomic_ops.a \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_6)
basic_sizes_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_bitvector_OBJECTS = bitvector.$(OBJEXT)
bitvector_OBJECTS = $(am_bitvector_OBJECTS)
bitvector_LDADD = $(LDADD)
bitvector_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_blockpools_OBJECTS = blockpools.$(OBJEXT)
blockpools_OBJECTS = $(am_blockpools_OBJECTS)
blockpools_LDADD = $(LDADD)
blockpools_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_box_OBJECTS = box.$(OBJEXT)
box_OBJECTS = $(am_box_OBJECTS)
box_LDADD = $(LDADD)
box_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_container_OBJECTS = container.$(OBJEXT)
container_OBJECTS = $(am_container_OBJECTS)
container_LDADD = $(LDADD)
container_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_cuckoo_OBJECTS = cuckoo.$(OBJEXT)
cuckoo_OBJECTS = $(am_cuckoo_OBJECTS)
cuckoo_LDADD = $(LDADD)
cuckoo_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_darray_OBJECTS = darray.$(OBJEXT)
darray_OBJECTS = $(am_darray_OBJECTS)
darray_LDADD = $(LDADD)
darray_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_findprime_OBJECTS = findprime.$(OBJEXT)
findprime_OBJECTS = $(am_findprime_OBJECTS)
findprime_LDADD = $(LDADD)
findprime_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_findsizes_OBJECTS = findsizes.$(OBJEXT)
findsizes_OBJECTS = $(am_findsizes_OBJECTS)
findsizes_LDADD = $(LDADD)
findsizes_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_hash1_OBJECTS = hash1.$(OBJEXT)
hash1_OBJECTS = $(am_hash1_OBJECTS)
hash1_LDADD = $(LDADD)
hash1_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_hash2_OBJECTS = hash2.$(OBJEXT)
hash2_OBJECTS = $(am_hash2_OBJECTS)
hash2_LDADD = $(LDADD)
hash2_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_heap_OBJECTS = heap.$(OBJEXT)
heap_OBJECTS = $(am_heap_OBJECTS)
heap_LDADD = $(LDADD)
heap_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_io_OBJECTS = io.$(OBJEXT)
io_OBJECTS = $(am_io_OBJECTS)
io_LDADD = $(LDADD)
io_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_list1_OBJECTS = list1.$(OBJEXT)
list1_OBJECTS = $(am_list1_OBJECTS)
list1_LDADD = $(LDADD)
list1_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_list2_OBJECTS = list2.$(OBJEXT)
list2_OBJECTS = $(am_list2_OBJECTS)
list2_LDADD = $(LDADD)
list2_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_list3_OBJECTS = list3.$(OBJEXT)
list3_OBJECTS = $(am_list3_OBJECTS)
list3_LDADD = $(LDADD)
list3_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_memblock_OBJECTS = memblock.$(OBJEXT)
memblock_OBJECTS = $(am_memblock_OBJECTS)
memblock_LDADD = $(LDADD)
memblock_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_ntime_OBJECTS = ntime.$(OBJEXT)
ntime_OBJECTS = $(am_ntime_OBJECTS)
ntime_LDADD = $(LDADD)
ntime_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_rand_OBJECTS = rand.$(OBJEXT)
rand_OBJECTS = $(am_rand_OBJECTS)
rand_LDADD = $(LDADD)
rand_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_random_OBJECTS = random.$(OBJEXT)
random_OBJECTS = $(am_random_OBJECTS)
random_LDADD = $(LDADD)
random_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_rc_OBJECTS = rc.$(OBJEXT)
rc_OBJECTS = $(am_rc_OBJECTS)
rc_LDADD = $(LDADD)
rc_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_rusage_test_OBJECTS = rusage_test.$(OBJEXT)
rusage_test_OBJECTS = $(am_rusage_test_OBJECTS)
rusage_test_LDADD = $(LDADD)
rusage_test_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_ss_OBJECTS = ss.$(OBJEXT)
ss_OBJECTS = $(am_ss_OBJECTS)
ss_LDADD = $(LDADD)
ss_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_stats_OBJECTS = stats.$(OBJEXT)
stats_OBJECTS = $(am_stats_OBJECTS)
stats_LDADD = $(LDADD)
stats_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
am_stats2_OBJECTS = test_stat.$(OBJEXT) stats2.$(OBJEXT)
stats2_OBJECTS = $(am_stats2_OBJECTS)
stats2_LDADD = $(LDADD)
stats2_DEPENDENCIES = ../../fc/libfc.a $(am__DEPENDENCIES_7)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/config
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(basic_sizes_SOURCES) $(bitvector_SOURCES) \
	$(blockpools_SOURCES) $(box_SOURCES) $(container_SOURCES) \
	$(cuckoo_SOURCES) $(darray_SOURCES) $(findprime_SOURCES) \
	$(findsizes_SOURCES) $(hash1_SOURCES) $(hash2_SOURCES) \
	$(heap_SOURCES) $(io_SOURCES) $(list1_SOURCES) \
	$(list2_SOURCES) $(list3_SOURCES) $(memblock_SOURCES) \
	$(ntime_SOURCES) $(rand_SOURCES) $(random_SOURCES) \
	$(rc_SOURCES) $(rusage_test_SOURCES) $(ss_SOURCES) \
	$(stats_SOURCES) $(stats2_SOURCES)
DIST_SOURCES = $(basic_sizes_SOURCES) $(bitvector_SOURCES) \
	$(blockpools_SOURCES) $(box_SOURCES) $(container_SOURCES) \
	$(cuckoo_SOURCES) $(darray_SOURCES) $(findprime_SOURCES) \
	$(findsizes_SOURCES) $(hash1_SOURCES) $(hash2_SOURCES) \
	$(heap_SOURCES) $(io_SOURCES) $(list1_SOURCES) \
	$(list2_SOURCES) $(list3_SOURCES) $(memblock_SOURCES) \
	$(ntime_SOURCES) $(rand_SOURCES) $(random_SOURCES) \
	$(rc_SOURCES) $(rusage_test_SOURCES) $(ss_SOURCES) \
	$(stats_SOURCES) $(stats2_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = 
COMPILER_IS_GCC_FALSE = @COMPILER_IS_GCC_FALSE@
COMPILER_IS_GCC_TRUE = @COMPILER_IS_GCC_TRUE@
COMPILER_IS_ICC_FALSE = @COMPILER_IS_ICC_FALSE@
COMPILER_IS_ICC_TRUE = @COMPILER_IS_ICC_TRUE@
COMPILER_IS_SUNCC_FALSE = @COMPILER_IS_SUNCC_FALSE@
COMPILER_IS_SUNCC_TRUE = @COMPILER_IS_SUNCC_TRUE@
COMPILER_IS_UNKNOWN_FALSE = @COMPILER_IS_UNKNOWN_FALSE@
COMPILER_IS_UNKNOWN_TRUE = @COMPILER_IS_UNKNOWN_TRUE@
CONFIG_STATUS_DEPENDENCIES = @CONFIG_STATUS_DEPENDENCIES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
# This clearing of CXXFLAGS is necessary to override the
# annoying -g -O2 that autoconf stuffs in there, and which
# I cannot find any other way to control.
CXXFLAGS = 
CYGPATH_W = @CYGPATH_W@
DEBUGGERSYMBOLS_FALSE = @DEBUGGERSYMBOLS_FALSE@
DEBUGGERSYMBOLS_TRUE = @DEBUGGERSYMBOLS_TRUE@
DEBUGLEVEL0_FALSE = @DEBUGLEVEL0_FALSE@
DEBUGLEVEL0_TRUE = @DEBUGLEVEL0_TRUE@
DEBUGLEVEL1_FALSE = @DEBUGLEVEL1_FALSE@
DEBUGLEVEL1_TRUE = @DEBUGLEVEL1_TRUE@
DEBUGLEVEL2_FALSE = @DEBUGLEVEL2_FALSE@
DEBUGLEVEL2_TRUE = @DEBUGLEVEL2_TRUE@
DEBUGLEVEL3_FALSE = @DEBUGLEVEL3_FALSE@
DEBUGLEVEL3_TRUE = @DEBUGLEVEL3_TRUE@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DTRACE = @DTRACE@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_ARCH_LP64_FALSE = @ENABLE_ARCH_LP64_FALSE@
ENABLE_ARCH_LP64_TRUE = @ENABLE_ARCH_LP64_TRUE@
EXEEXT = @EXEEXT@
EXPLICIT_TEMPLATE_FALSE = @EXPLICIT_TEMPLATE_FALSE@
EXPLICIT_TEMPLATE_TRUE = @EXPLICIT_TEMPLATE_TRUE@
GCC_BROKEN_WARNINGS_FALSE = @GCC_BROKEN_WARNINGS_FALSE@
GCC_BROKEN_WARNINGS_TRUE = @GCC_BROKEN_WARNINGS_TRUE@
GCC_VER_34_WARNINGS_FALSE = @GCC_VER_34_WARNINGS_FALSE@
GCC_VER_34_WARNINGS_TRUE = @GCC_VER_34_WARNINGS_TRUE@
GCC_VER_3_WARNINGS_FALSE = @GCC_VER_3_WARNINGS_FALSE@
GCC_VER_3_WARNINGS_TRUE = @GCC_VER_3_WARNINGS_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
NOPEDANTIC_FALSE = @NOPEDANTIC_FALSE@
NOPEDANTIC_TRUE = @NOPEDANTIC_TRUE@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PURECOV_FALSE = @PURECOV_FALSE@
PURECOV_TRUE = @PURECOV_TRUE@
PURIFY_FALSE = @PURIFY_FALSE@
PURIFY_TRUE = @PURIFY_TRUE@
QUANTIFY_FALSE = @QUANTIFY_FALSE@
QUANTIFY_TRUE = @QUANTIFY_TRUE@
RANLIB = @RANLIB@
RMM = @RMM@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TRACE_FALSE = @TRACE_FALSE@
TRACE_TRUE = @TRACE_TRUE@
USE_DORA_FALSE = @USE_DORA_FALSE@
USE_DORA_TRUE = @USE_DORA_TRUE@
USE_IOS_COMPAT_FALSE = @USE_IOS_COMPAT_FALSE@
USE_IOS_COMPAT_TRUE = @USE_IOS_COMPAT_TRUE@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_RMM = @ac_ct_RMM@
ac_ct_STRIP = @ac_ct_STRIP@
ac_pt_DTRACE = @ac_pt_DTRACE@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
datadir = @datadir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
uname_machine = @uname_machine@

# rules, macros generic to all Makefile.am
AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha

# dewitt-gw, chianti, deathstar
# ActiveTcl no-symbols installed:
TCL_DIR = /scratch/nhall/tcl
TCL_INCLUDE = $(TCL_DIR)/include
TCL_LIB = -L$(TCL_DIR)/lib -ltcl8.5

# d-12, dewitt-gw:
# ActiveTcl no-symbols installed:
# TCL_INCLUDE = /u/n/h/nhall/tcl/include
# TCL_LIB = -L/u/n/h/nhall/tcl/lib -ltcl8.5

# PURE_DIR = /s/purifyplus-7.0/@sys/
# PURE_DIR = /s/purifyplus/@sys/
PURE_DIR = /s/purifyplus/amd64_rhel5
# PURE_CACHE_DIR = /scratch/nhall/pure
# d-12:
PURE_CACHE_DIR = /tmp/nhall/pure
VTUNE_DIR = /opt/intel/vtune

# --------------------------------------------------------
#
# Local non-standard paths to things are in Makefile.local
#
# --------------------------------------------------------
DISTCLEANFILES = Makefile $(GENFILES)
BUILT_SOURCES = $(GENFILES)
# installdir = $(top_srcdir)/installdir
# docdir = $(installdir)/doc

# --------------------------------------------------------
#
# Initialize  
#
# --------------------------------------------------------

# that the posix-compliant clib interfaces are there (e.g., ctime_r)
# (Actually, you're supposed to get them both with _POSIX_C_SOURCE > 199506L
# but I'm not that trusting.)
ALWAYS_FLAGS = -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS $(am__append_1) \
	$(am__append_2) $(am__append_3) $(am__append_4) \
	$(am__append_6) $(am__append_7) $(am__append_8) \
	-I$(top_srcdir)/src/atomic_ops $(am__append_9)
# NO_INLINE_FLAGS =  -fno-inline
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_ICC_FALSE@@COMPILER_IS_SUNCC_FALSE@NO_INLINE_FLAGS = 
#  CC turns on inlining based on optimization level.  at O0 it should
#  do no inlining at less than O3.  There is no way to force inlining to
#  be off (well, +d does except when the optimization level overrides it); 
#  but you can force it to be on.
@COMPILER_IS_SUNCC_TRUE@NO_INLINE_FLAGS = +d
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_ICC_FALSE@@COMPILER_IS_SUNCC_FALSE@YES_INLINE_FLAGS = -finline-functions
@COMPILER_IS_SUNCC_TRUE@YES_INLINE_FLAGS = 
AM_CCASFLAGS = -I$(top_srcdir)/config -I$(top_srcdir)/src/atomic_ops \
	$(am__append_5) $(TARGET_FLAGS)
# GCC/32
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_FALSE@TARGET_FLAGS = -m32 -UARCH_LP64
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_TRUE@TARGET_FLAGS = -m64 -DARCH_LP64 

# SUN CC/32
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_FALSE@TARGET_FLAGS = -m32 -UARCH_LP64
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_TRUE@TARGET_FLAGS = -m64 -DARCH_LP64
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_TRUE@AM_LDFLAGS = -m64
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_TRUE@AM_LDFLAGS = -m64
@ENABLE_ARCH_LP64_FALSE@AM_LDFLAGS = -m32
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_FALSE@TUNE_FLAGS = 
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_TRUE@TUNE_FLAGS = 
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_FALSE@TUNE_FLAGS = -xtarget=native
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_TRUE@TUNE_FLAGS = -xtarget=native
@COMPILER_IS_GCC_TRUE@@NOPEDANTIC_FALSE@PEDANTIC = -pedantic-errors  
@COMPILER_IS_GCC_TRUE@@NOPEDANTIC_TRUE@PEDANTIC = 

# create macro for things to be removed with 'make clean'
LOCALCLEAN = $(am__append_19) $(am__append_22) $(am__append_25)
# create macro for dirs to be removed recursively with 'make clean'
LOCALCLEANDIRS = 

# CXX flags that go on the compiles for pure products
PURE_CXXFLAGS = $(am__append_20) $(am__append_23) $(am__append_26)
GCC_WARN_FLAGS = $(am__append_10) $(am__append_11) $(am__append_12) \
	$(am__append_13) $(am__append_14) $(am__append_15)
AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \
	$(OPTFLAGS) $(PURE_CXXFLAGS) $(ALWAYS_FLAGS) $(TEMPLATEFLAGS) \
	-I$(top_srcdir)/src/fc
AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)
ALLCLEANFILES = $(DISTCLEANFILES) \
	       	$(MOSTLYCLEANFILES) \
	       	$(MAINTAINERCLEANFILES) \
	       	$(CLEANFILES) 

@COMPILER_IS_GCC_TRUE@W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated 
GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG 
GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG 

#----------------- GCC  -----------------------------------
# -fstack-check removed because sthread does its own, and sthread/tests/
# thread1 test won't build with this turned on: -fstack-check
@COMPILER_IS_SUNCC_FALSE@SYMBOLSFLAGS = -ggdb

# --------------------------------------------------------
#
# handle --enable-dbgsymbols config option
#
# --------------------------------------------------------
#----------------- SUN CC -----------------------------------
# SYMBOLSFLAGS = -g -xs -xinstrument=datarace -DTHA_RACE
@COMPILER_IS_SUNCC_TRUE@SYMBOLSFLAGS = -g -xs 
@COMPILER_IS_SUNCC_FALSE@NOSYMBOLSFLAGS = 
# -g0 turns off inlining
@COMPILER_IS_SUNCC_TRUE@NOSYMBOLSFLAGS = -g0 
@COMPILER_IS_SUNCC_FALSE@NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) 
@COMPILER_IS_SUNCC_TRUE@NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS)
@COMPILER_IS_SUNCC_FALSE@MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)
@COMPILER_IS_SUNCC_TRUE@MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)
@COMPILER_IS_ICC_FALSE@@COMPILER_IS_SUNCC_FALSE@FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)
@COMPILER_IS_ICC_TRUE@@COMPILER_IS_SUNCC_FALSE@FULLOPTFLAGS = -O3 $(YES_INLINE_FLAGS)
# FULLOPTFLAGS = -xO4 -xinline=%auto,no%__1cKtatas_lockEspin6M_v_,no%__1cImcs_lockPspin_on_waiting6Mpon0AFqnode__v_,no%__1cImcs_lockMspin_on_next6Mpon0AFqnode__3_,no%__1cLhybrid_lockF_spin6Fpon0AFqnode__l_,no%__1cHmcs_logSspin_while_waiting6Mpn0AFqnode__v_,no%__1cKmcs_rwlockO_spin_on_writer6M_v_,no%__1cKmcs_rwlockP_spin_on_readers6M_v_,no%lock_mutex_acquire,no%returning_eINTRANS,no%__1cKtpmcs_lockMspin_on_next6Mpon0AFqnode__v_,no%__1cKtpmcs_lockPspin_on_waiting6Mpon0AFqnode__v_
@COMPILER_IS_SUNCC_TRUE@FULLOPTFLAGS = -xO4 -xinline=%auto
@DEBUGLEVEL1_FALSE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \
@DEBUGLEVEL1_FALSE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@	$(am__append_16) \
@DEBUGLEVEL1_FALSE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@	$(am__append_17)
@DEBUGLEVEL1_TRUE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \
@DEBUGLEVEL1_TRUE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@	$(am__append_16) \
@DEBUGLEVEL1_TRUE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@	$(am__append_17)
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@DEBUGFLAGS =  \
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@	$(GENERIC_NODEBUG_FLAGS) \
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@	$(am__append_16) \
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@	$(am__append_17)
@DEBUGLEVEL3_TRUE@DEBUGFLAGS = $(GENERIC_YESDEBUG_FLAGS) \
@DEBUGLEVEL3_TRUE@	$(am__append_16) $(am__append_17)
# override optimization flags for debugger symbols because with gcc, optimization level trumps.
@DEBUGGERSYMBOLS_TRUE@OPTFLAGS = $(MIDOPTFLAGS)
@DEBUGLEVEL1_FALSE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@OPTFLAGS = $(FULLOPTFLAGS)
@DEBUGLEVEL1_TRUE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@OPTFLAGS = $(MIDOPTFLAGS)
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@OPTFLAGS = $(NOOPTFLAGS)
@DEBUGLEVEL3_TRUE@OPTFLAGS = $(NOOPTFLAGS)
@EXPLICIT_TEMPLATE_FALSE@TEMPLATEFLAGS = 

# --------------------------------------------------------
#
# handle --enable-explicit config option
#
# --------------------------------------------------------
@EXPLICIT_TEMPLATE_TRUE@TEMPLATEFLAGS = -fno-implicit-templates -DEXPLICIT_TEMPLATE

# --------------------------------------------------------

# Initialize LOCALLDADD 
# Note: on solaris -lnsl may be needed for gethostbyname()
# and -lsocket may be needed for getaddrinfo
# Those are handled by configure.ac AC_CHECK_LIB macros
LOCALLDADD = $(top_srcdir)/src/atomic_ops/libatomic_ops.a \
	$(am__append_18) $(am__append_21) $(am__append_24)

# --------------------------------------------------------
#
# handle --enable-purify config option
#
# --------------------------------------------------------

# PURIFY_INCLUDE = $(PURE_DIR)/include
# no proper installation here, so hack all three of these paths ...
# PURIFY_LIBS = $(PURE_DIR)/lib/libpurify_stubs.a
# PURIFY_BIN = $(PURE_DIR)/bin
# PURIFY_INCLUDE = $(PURE_DIR)/releases/purify.i386_linux2.7.0
@PURIFY_TRUE@PURIFY_INCLUDE = $(PURE_DIR)/releases/purify.i386_linux2.7.0.0.0-014
# yes, libs are in the same place as is the header file
@PURIFY_TRUE@PURIFY_LIBS = $(PURIFY_INCLUDE)/lib64/libpurify_stubs.a
@PURIFY_TRUE@PURIFY_BIN = $(PURE_DIR)/bin
@PURIFY_TRUE@PURIFY_FLAGS = -g++=yes -cache-dir=$(PURE_CACHE_DIR) -threads=yes -pointer-mask-64=0xfffffffffffffffe
@PURECOV_TRUE@SUFFIXES = .purecov
@PURIFY_TRUE@SUFFIXES = .pure
@QUANTIFY_TRUE@SUFFIXES = .quant

# --------------------------------------------------------
#
# handle --enable-quantify config option
#
# --------------------------------------------------------

# QUANTIFY_INCLUDE = $(PURE_DIR)/include
# no proper installation here, so hack all three of these paths ...
# QUANTIFY_LIBS = 
# QUANTIFY_BIN = $(PURE_DIR)/bin
@QUANTIFY_TRUE@QUANTIFY_INCLUDE = $(PURE_DIR)/releases/quantify.i386_linux2.7.0
# yes, libs are in the same place as is the header file
@QUANTIFY_TRUE@QUANTIFY_LIBS = $(QUANTIFY_INCLUDE)/lib64/libquantify_stubs.a
@QUANTIFY_TRUE@QUANTIFY_BIN = $(PURE_DIR)/bin
@QUANTIFY_TRUE@QUANTIFY_FLAGS = -g++=yes \
@QUANTIFY_TRUE@	     -copy-fd-output-to-logfile=1,2 \
@QUANTIFY_TRUE@	     -ignore-signals=SIGUSR1 \
@QUANTIFY_TRUE@	     -threads -thread-stack-change=0x3000 -max_threads=64 \
@QUANTIFY_TRUE@	     -cache-dir=$(PURE_CACHE_DIR)

GROFF_OPTIONS = -s -m man -U

# --------------------------------------------------------
#
# handle --enable-purecov config option
#
# --------------------------------------------------------

# PURECOV_INCLUDE = $(PURE_DIR)/include
# no proper installation here, so hack all three of these paths ...
# PURECOV_LIBS = $(PURE_DIR)/lib/libpurecov_stubs.a
# PURECOV_BIN = $(PURE_DIR)/bin
@PURECOV_TRUE@PURECOV_INCLUDE = $(PURE_DIR)/releases/purecov.i386_linux2.7.0
# yes, libs are in the same place as is the header file
@PURECOV_TRUE@PURECOV_LIBS = $(PURECOV_INCLUDE)/libpurecov_stubs.a
@PURECOV_TRUE@PURECOV_BIN = $(PURE_DIR)/bin
@PURECOV_TRUE@PURECOV_FLAGS = -g++=yes -chain-length=10  -inuse-at-exit \
@PURECOV_TRUE@	     -first-only -leaks-at-exit -copy-fd-output-to-logfile=1,2 \
@PURECOV_TRUE@	     -ignore-signals=SIGUSR1 -pointer-mask=0xfffffffe \
@PURECOV_TRUE@	     -threads -thread-stack-change=0x3000 -max_threads=64 \
@PURECOV_TRUE@	     -cache-dir=$(PURE_CACHE_DIR)

RESULT_COMPARISON_FILES = stats2-out \
	 box.2-out box.3-out box.4-out \
	 list1-out  darray-out memblock-out blockpools-out

EXTRA_DIST = testall test_stat.dat test_stat.h $(RESULT_COMPARISON_FILES) test_me.h
TESTS = testall
LDADD = ../../fc/libfc.a $(LOCALLDADD)
rusage_test_SOURCES = rusage_test.cpp
memblock_SOURCES = memblock.cpp
blockpools_SOURCES = blockpools.cpp
darray_SOURCES = darray.cpp
basic_sizes_SOURCES = basic_sizes.cpp
ss_SOURCES = ss.cpp
list1_SOURCES = list1.cpp
list2_SOURCES = list2.cpp
list3_SOURCES = list3.cpp
hash1_SOURCES = hash1.cpp
hash2_SOURCES = hash2.cpp
ntime_SOURCES = ntime.cpp
heap_SOURCES = heap.cpp
rc_SOURCES = rc.cpp
random_SOURCES = random.cpp
stats_SOURCES = stats.cpp
stats2_SOURCES = test_stat.cpp stats2.cpp
box_SOURCES = box.cpp
io_SOURCES = io.cpp
rand_SOURCES = rand.cpp
container_SOURCES = container.cpp
findprime_SOURCES = findprime.cpp
findsizes_SOURCES = findsizes.cpp
cuckoo_SOURCES = cuckoo.cpp
bitvector_SOURCES = bitvector.cpp
TEST = testall
TEST_STAT_GENFILES = test_stat_struct_gen.h  test_stat_msg_gen.h
GENFILES = $(TEST_STAT_GENFILES)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .purecov .pure .quant .$(OBJEXT) .common .cpp .dvi .fc .html .o .obj .pdf .ps .ssm .sthread .tex
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.generic $(top_srcdir)/Makefile.local $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/fc/tests/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/fc/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
basic_sizes$(EXEEXT): $(basic_sizes_OBJECTS) $(basic_sizes_DEPENDENCIES) 
	@rm -f basic_sizes$(EXEEXT)
	$(CXXLINK) $(basic_sizes_LDFLAGS) $(basic_sizes_OBJECTS) $(basic_sizes_LDADD) $(LIBS)
bitvector$(EXEEXT): $(bitvector_OBJECTS) $(bitvector_DEPENDENCIES) 
	@rm -f bitvector$(EXEEXT)
	$(CXXLINK) $(bitvector_LDFLAGS) $(bitvector_OBJECTS) $(bitvector_LDADD) $(LIBS)
blockpools$(EXEEXT): $(blockpools_OBJECTS) $(blockpools_DEPENDENCIES) 
	@rm -f blockpools$(EXEEXT)
	$(CXXLINK) $(blockpools_LDFLAGS) $(blockpools_OBJECTS) $(blockpools_LDADD) $(LIBS)
box$(EXEEXT): $(box_OBJECTS) $(box_DEPENDENCIES) 
	@rm -f box$(EXEEXT)
	$(CXXLINK) $(box_LDFLAGS) $(box_OBJECTS) $(box_LDADD) $(LIBS)
container$(EXEEXT): $(container_OBJECTS) $(container_DEPENDENCIES) 
	@rm -f container$(EXEEXT)
	$(CXXLINK) $(container_LDFLAGS) $(container_OBJECTS) $(container_LDADD) $(LIBS)
cuckoo$(EXEEXT): $(cuckoo_OBJECTS) $(cuckoo_DEPENDENCIES) 
	@rm -f cuckoo$(EXEEXT)
	$(CXXLINK) $(cuckoo_LDFLAGS) $(cuckoo_OBJECTS) $(cuckoo_LDADD) $(LIBS)
darray$(EXEEXT): $(darray_OBJECTS) $(darray_DEPENDENCIES) 
	@rm -f darray$(EXEEXT)
	$(CXXLINK) $(darray_LDFLAGS) $(darray_OBJECTS) $(darray_LDADD) $(LIBS)
findprime$(EXEEXT): $(findprime_OBJECTS) $(findprime_DEPENDENCIES) 
	@rm -f findprime$(EXEEXT)
	$(CXXLINK) $(findprime_LDFLAGS) $(findprime_OBJECTS) $(findprime_LDADD) $(LIBS)
findsizes$(EXEEXT): $(findsizes_OBJECTS) $(findsizes_DEPENDENCIES) 
	@rm -f findsizes$(EXEEXT)
	$(CXXLINK) $(findsizes_LDFLAGS) $(findsizes_OBJECTS) $(findsizes_LDADD) $(LIBS)
hash1$(EXEEXT): $(hash1_OBJECTS) $(hash1_DEPENDENCIES) 
	@rm -f hash1$(EXEEXT)
	$(CXXLINK) $(hash1_LDFLAGS) $(hash1_OBJECTS) $(hash1_LDADD) $(LIBS)
hash2$(EXEEXT): $(hash2_OBJECTS) $(hash2_DEPENDENCIES) 
	@rm -f hash2$(EXEEXT)
	$(CXXLINK) $(hash2_LDFLAGS) $(hash2_OBJECTS) $(hash2_LDADD) $(LIBS)
heap$(EXEEXT): $(heap_OBJECTS) $(heap_DEPENDENCIES) 
	@rm -f heap$(EXEEXT)
	$(CXXLINK) $(heap_LDFLAGS) $(heap_OBJECTS) $(heap_LDADD) $(LIBS)
io$(EXEEXT): $(io_OBJECTS) $(io_DEPENDENCIES) 
	@rm -f io$(EXEEXT)
	$(CXXLINK) $(io_LDFLAGS) $(io_OBJECTS) $(io_LDADD) $(LIBS)
list1$(EXEEXT): $(list1_OBJECTS) $(list1_DEPENDENCIES) 
	@rm -f list1$(EXEEXT)
	$(CXXLINK) $(list1_LDFLAGS) $(list1_OBJECTS) $(list1_LDADD) $(LIBS)
list2$(EXEEXT): $(list2_OBJECTS) $(list2_DEPENDENCIES) 
	@rm -f list2$(EXEEXT)
	$(CXXLINK) $(list2_LDFLAGS) $(list2_OBJECTS) $(list2_LDADD) $(LIBS)
list3$(EXEEXT): $(list3_OBJECTS) $(list3_DEPENDENCIES) 
	@rm -f list3$(EXEEXT)
	$(CXXLINK) $(list3_LDFLAGS) $(list3_OBJECTS) $(list3_LDADD) $(LIBS)
memblock$(EXEEXT): $(memblock_OBJECTS) $(memblock_DEPENDENCIES) 
	@rm -f memblock$(EXEEXT)
	$(CXXLINK) $(memblock_LDFLAGS) $(memblock_OBJECTS) $(memblock_LDADD) $(LIBS)
ntime$(EXEEXT): $(ntime_OBJECTS) $(ntime_DEPENDENCIES) 
	@rm -f ntime$(EXEEXT)
	$(CXXLINK) $(ntime_LDFLAGS) $(ntime_OBJECTS) $(ntime_LDADD) $(LIBS)
rand$(EXEEXT): $(rand_OBJECTS) $(rand_DEPENDENCIES) 
	@rm -f rand$(EXEEXT)
	$(CXXLINK) $(rand_LDFLAGS) $(rand_OBJECTS) $(rand_LDADD) $(LIBS)
random$(EXEEXT): $(random_OBJECTS) $(random_DEPENDENCIES) 
	@rm -f random$(EXEEXT)
	$(CXXLINK) $(random_LDFLAGS) $(random_OBJECTS) $(random_LDADD) $(LIBS)
rc$(EXEEXT): $(rc_OBJECTS) $(rc_DEPENDENCIES) 
	@rm -f rc$(EXEEXT)
	$(CXXLINK) $(rc_LDFLAGS) $(rc_OBJECTS) $(rc_LDADD) $(LIBS)
rusage_test$(EXEEXT): $(rusage_test_OBJECTS) $(rusage_test_DEPENDENCIES) 
	@rm -f rusage_test$(EXEEXT)
	$(CXXLINK) $(rusage_test_LDFLAGS) $(rusage_test_OBJECTS) $(rusage_test_LDADD) $(LIBS)
ss$(EXEEXT): $(ss_OBJECTS) $(ss_DEPENDENCIES) 
	@rm -f ss$(EXEEXT)
	$(CXXLINK) $(ss_LDFLAGS) $(ss_OBJECTS) $(ss_LDADD) $(LIBS)
stats$(EXEEXT): $(stats_OBJECTS) $(stats_DEPENDENCIES) 
	@rm -f stats$(EXEEXT)
	$(CXXLINK) $(stats_LDFLAGS) $(stats_OBJECTS) $(stats_LDADD) $(LIBS)
stats2$(EXEEXT): $(stats2_OBJECTS) $(stats2_DEPENDENCIES) 
	@rm -f stats2$(EXEEXT)
	$(CXXLINK) $(stats2_LDFLAGS) $(stats2_OBJECTS) $(stats2_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basic_sizes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bitvector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blockpools.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/container.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cuckoo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/darray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/findprime.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/findsizes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/heap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/io.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/list1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/list2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/list3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memblock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ntime.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rusage_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ss.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stats2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_stat.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../../..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am: pdf-local

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-local ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am pdf-local ps ps-am tags \
	uninstall uninstall-am uninstall-info-am


# --------------------------------------------------------
#
# add target to create .cvsignore file
#
# --------------------------------------------------------
.cvsignore:  Makefile 
	touch $@
	$(RM) $@
	echo $(ALLCLEANFILES) >& $@

# --------------------------------------------------------
#
# add target to get rid of additional built objects,
#    in particular this is for the PURE targets
#
# --------------------------------------------------------
clean-local-dirs:  
	$(RM) -r $(LOCALCLEANDIRS) 

clean-local: clean-local-dirs
	$(RM) $(LOCALCLEAN) 
@PURIFY_TRUE@.$(OBJEXT).pure:  
@PURIFY_TRUE@	$(PURIFY_BIN)/purify $(PURIFY_FLAGS)  $(PURIFY_COLLECTOR) $(CXX) -o $@ $< $(LDADD) $(LIBS)
@QUANTIFY_TRUE@.$(OBJEXT).quant:  
@QUANTIFY_TRUE@	$(QUANTIFY_BIN)/quantify $(QUANTIFY_FLAGS) $(QUANTIFY_COLLECTOR)  $(CXX) -o $@ $< $(LDADD) $(LIBS)

SUFFIXES: .tex .fc .common .sthread .ssm .html .ps .dvi .pdf 

.fc.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.common.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.sthread.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.ssm.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.fc.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.common.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.sthread.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.ssm.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.fc.dvi: 
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.common.dvi: 
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.sthread.dvi: 
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.ssm.dvi:
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.dvi.pdf:
	dvipdfm $<

.tex.dvi:
	latex $<
# second time to get the x-refs
	latex $<

# html-local: $(HTML_TARGETS)

pdf-local: $(PDF_TARGETS)
@PURECOV_TRUE@.$(OBJEXT).purecov:  
@PURECOV_TRUE@	$(PURECOV_BIN)/purecov $(PURECOV_FLAGS)  $(PURECOV_COLLECTOR) $(CXX) -o $@ $< $(LDADD) $(LIBS)

$(RESULT_COMPARISON_FILES) : noop

noop:
testall:  $(check_PROGRAMS)

test_stat.$(OBJEXT): $(TEST_STAT_GENFILES)
stats.$(OBJEXT):  $(TEST_STAT_GENFILES)

$(TEST_STAT_GENFILES): test_stat.dat
	$(PERL) $(top_srcdir)/tools/stats.pl $?
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
